import sqlite3
from pydantic_ai import Agent, RunContext
from dependencies import *
import logfire
from llm import *
from config_reader import *
def sql_run_tool(ctx:RunContext[Deps],sql_query:str):
    """Run the sql query on the database
    Args:
    ctx: the run context
    sql_query: the generated sql query
    """
    logfire.info(f"sql query generated by the generator model which is input here is {sql_query}")
    try:
        with sqlite3.connect(ctx.deps.db_file_path) as conn:
            cursor=conn.cursor()
            results=cursor.execute(sql_query).fetchall()
            return results
    except Exception as e:
        print(e)
    return []


def create_sql_executor_agent():
    model=build_model(model_name=settings.llm_executor.name,api_key=settings.llm_executor.api_key,base_url='',temperature=settings.llm_executor.temperature,max_tokens=settings.llm_executor.max_tokens)
    sql_executor_agent=Agent(model=model,deps_type=Deps,instructions=settings.llm_executor.prompt,tools=[sql_run_tool],retries=2)

    return sql_executor_agent